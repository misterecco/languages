-- file prolog.cf
-- Author: Tomasz Kępa <tk359746@students.mimuw.edu.pl>
-- LBNF of simplified prolog
-- Based on SICStus Prolog User’s Manual (release 4.3.5)
-- and BNFC documentation

entrypoints Program ;

rules Program ::= [Sentence] ;

terminator nonempty Sentence "." ;

-- entrypoints Sentence ;

rules      Sentence ::= Clause ;
Directive. Sentence ::= ":-" Term ;
Query.     Sentence ::= "?-" Term ;

Rule.       Clause ::= Term ":-" [Term] ;
UnitClause. Clause ::= Term ;

separator nonempty Term "," ;

_. Term   ::= Term12 ;
_. Term12 ::= Term11 ;
_. Term11 ::= Term10 ;
_. Term10 ::= Term9  ;
_. Term9  ::= Term8  ;
_. Term8  ::= Term7  ;
_. Term7  ::= Term6  ;
_. Term6  ::= Term5  ;
_. Term5  ::= Term4  ;
_. Term4  ::= Term3  ;
_. Term3  ::= Term2  ;
_. Term2  ::= Term1  ;
_. Term1  ::= Term0  ;
_. Term0  ::= "(" Term12 ")";

-- OpSequence.   Term10 ::= Term9 "," Term10 ;

OpNegate.     Term9 ::= "\\+" Term9 ;

OpUnifies.    Term7 ::= Term6 "=" Term6 ;
OpNotUnifies. Term7 ::= Term6 "\\=" Term6 ;
OpEqual.      Term7 ::= Term6 "==" Term6 ;
OpNotEqual.   Term7 ::= Term6 "\\==" Term6 ;
OpArIs.       Term7 ::= Term6 "is" Term6 ;
OpArEqual.    Term7 ::= Term6 "=:=" Term6 ;
OpArNotEqual. Term7 ::= Term6 "=\\=" Term6 ;
OpArLt.       Term7 ::= Term6 "<" Term6 ;
OpArGt.       Term7 ::= Term6 ">" Term6 ;
OpArLte.      Term7 ::= Term6 "=<" Term6 ;
OpArGte.      Term7 ::= Term6 ">=" Term6 ;

OpArAdd.      Term5 ::= Term5 "+" Term4 ;
OpArSub.      Term5 ::= Term5 "-" Term4 ;

OpArMul.      Term4 ::= Term4 "*" Term3 ;
OpArDiv.      Term4 ::= Term4 "/" Term3 ;
OpArMod.      Term4 ::= Term4 "mod" Term3 ;

OpArNeg.      Term2 ::= "-" Term2 ;

Funct.        Term0 ::= Name "(" [Term9] ")" ;
Var.          Term0 ::= Variable ;
Const.        Term0 ::= Constant ;
List.         Term0 ::= Lst ;

separator nonempty Term9 "," ;

ListEmpty.    Lst ::= "[" "]" ;
ListNonEmpty. Lst ::= "[" ListExpr "]" ;
ListChar.     Lst ::= String ;

LESingle.     ListExpr ::= Term9 ;
LESeq.        ListExpr ::= Term9 "," ListExpr ;
LEHead.       ListExpr ::= Term9 "|" Term9 ;

Number. Constant ::= Integer ;
Atom.   Constant ::= Name ;

token Name (lower (letter | digit | '_')*) ;

token Variable ('_' (letter | digit | '_')*)
             | (upper (letter | digit | '_')*) ;

comment "/*" "*/" ;
comment "%" ;
